#include "radio.h"
#include "sdcard.h"
#include "loader.h"
//SiK bootloader support
#define FLASH_SIG0  0x3d
#define FLASH_SIG1  0xc2
#define FLASH_INFO_PAGE         0xf800    // 1 page reserved for bootloader
#define FLASH_SIGNATURE_BYTES   (FLASH_INFO_PAGE - 2) // Location of the flash signature
__at FLASH_SIGNATURE_BYTES uint8_t __code app_signature[2] = { FLASH_SIG0, FLASH_SIG1 };
INTERRUPT_PROTO (TIMER0_ISR, INTERRUPT_TIMER0);
INTERRUPT_PROTO (UART_ISR, INTERRUPT_UART0);


int main()
{
  PCA0MD   &= ~0x40; // disable F930 watchdog
  OSCICN |= 0x80;    // Enable the precision internal osc.
  RSTSRC = 0x06;     // Enable missing clock detector
  CLKSEL = 0x00;     // Select precision internal osc.


  spi1_init();
  delay(1000);
  spi9_init();
  serial_init();
  rf_init();
  sd_init_card();

  while(1) {
    for (uint8_t power = 0; power < 8; power++) { //Voice
      ET0 = 0;
      rf_set_power(power);
      for (uint8_t i = 3; i--;) {
        ET0 = 1;
        say(power);
        ET0 = 0;
        delay(500);
      }
      delay(2000);
    }
    for (uint8_t power = 1; power < 8; power += 2) { //Beeps
    ET0 = 0;
    rf_set_power(power);
    for (uint8_t j = 0; j < 2; j++) {
      for (uint8_t i = power; i--;) {
        ET0 = 1;
        fs_beep(10);
        ET0 = 0;
        delay(1000/power);
      }
      delay(500);
    }
    delay(200);
  }
  }
}

INTERRUPT(UART_ISR, INTERRUPT_UART0)
{
  if(RI0) {
    RI0=0;
    loader_update(SBUF0);
  } else {
    //TI0=0;
  }
}
